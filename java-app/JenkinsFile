pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon5
    }
  }
  stages {
    stage('Checkout') {
      steps {
        git branch: 'master', url: 'https://github.com/harsha-ops/Java_APP_CICD.git'
        sh 'pwd && ls -l'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -l'
        // build the project and create a JAR file
        sh 'cd java-app && mvn clean package'
        sh '''
        id jenkins || useradd -M -s /bin/bash jenkins
        chown -R jenkins:jenkins java-app/target
        '''

      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://192.168.33.15:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonar_cred', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "harsha6798/java-app-ci-image:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker_cred')
      }
      steps {
        script {
            sh 'cd java-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker_cred") {
                dockerImage.push()
            }
        }
      }
    }
    stage('Update K8S maifest Deployment') {
        environment {
            GIT_REPO_NAME = "Java_App_CICD"
            GIT_USER_NAME = "harsha-ops"
            DOCKER_IMAGE = "harsha6798/java-app-ci-image"
        }
        steps {
            withCredentials([string(credentialsId: 'github_token', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "harsha.xyz@gmail.com"
                    git config user.name "Harsha"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/image:${DOCKER_IMAGE}:*/image:${DOCKER_IMAGE}:${BUILD_NUMBER}/g" java-app-manifests/deployment.yml
                    git add .
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}
                '''
            }
        }
    }
  }
}